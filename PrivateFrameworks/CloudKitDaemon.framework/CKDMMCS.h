/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class CKDAssetCache, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSRunLoop, NSString;

@interface CKDMMCS : NSObject
{
    NSString *_protocolVersion;
    unsigned int _maxChunkCountForSection;
    _Bool _stopMMCSThread;
    CKDAssetCache *_assetCache;
    NSString *_path;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSRunLoop *_runLoop;
    NSString *_runLoopMode;
    long long _state;
    struct __MMCSEngine *_engine;
}

+ (id)_errorWithMMCSError:(id)arg1 description:(id)arg2 isGet:(_Bool)arg3;
+ (id)_errorWithMMCSError:(id)arg1 path:(id)arg2 description:(id)arg3 isGet:(_Bool)arg4;
+ (long long)_errorCodeWithMMCSPutError:(id)arg1;
+ (long long)_errorCodeWithMMCSGetError:(id)arg1;
+ (long long)_commonErrorCodeWithMMCSError:(id)arg1;
+ (id)_userInfoFromMMCSRetryableError:(id)arg1;
+ (id)_appID;
+ (id)emptyFileSignature;
@property(nonatomic) struct __MMCSEngine *engine; // @synthesize engine=_engine;
@property(nonatomic) _Bool stopMMCSThread; // @synthesize stopMMCSThread=_stopMMCSThread;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *runLoopMode; // @synthesize runLoopMode=_runLoopMode;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore; // @synthesize semaphore=_semaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) CKDAssetCache *assetCache; // @synthesize assetCache=_assetCache;
- (void).cxx_destruct;
- (id)getSectionItem:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)_contextToGetSectionItem:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)putSectionItem:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)_contextToPutSectionItem:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (int)fdForItemID:(unsigned long long)arg1 itemType:(id *)arg2 error:(id *)arg3;
- (void)unregisterItemID:(unsigned long long)arg1;
- (id)putItemGroupSet:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)_contextToPutItemGroup:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)getItemGroupSet:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)_contextToGetItemGroup:(id)arg1 options:(id)arg2 progress:(id)arg3 completionHandler:(void)arg4;
- (id)_referenceSignatureFromReferenceIdentifier:(id)arg1 containerID:(id)arg2;
- (id)registerItemGroupSet:(id)arg1 completionHandler:(id)arg2;
- (id)registerItemGroupSet:(id)arg1 shouldChunk:(_Bool)arg2 completionHandler:(id)arg3;
- (id)_contextToRegisterItemGroup:(id)arg1 options:(id)arg2 completionHandler:(id)arg3;
- (void)_boom;
- (void)_MMCSThread;
- (_Bool)_setupEngineIfNecessaryWithError:(id *)arg1 protocolVersion:(id *)arg2 maxChunkCountForSection:(unsigned int *)arg3;
- (_Bool)_setupEngineWithError:(id *)arg1;
- (void)tearDown;
- (void)cancelTransferWithContext:(id)arg1;
- (void)_logMMCSOptions:(id)arg1;
- (id)_referenceIdentifierFromAssetKey:(id)arg1;
@property(readonly, nonatomic, getter=getMaxChunkCountForSection) unsigned int maxChunkCountForSection;
@property(readonly, nonatomic, getter=getProtocolVersion) NSString *protocolVersion;
- (id)initWithClientContext:(id)arg1 assetCache:(id)arg2;

@end

