/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class CKDClientContext, CKSQLitePool, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString;

@interface CKDAssetCache : NSObject
{
    _Bool _isEvictionScheduled;
    CKSQLitePool *_dbPool;
    id _unregisterItemWithMMCSBlock;
    CKDClientContext *_context;
    NSString *_assetCacheDir;
    NSString *_applicationBundleID;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_expiryTimer;
}

+ (id)_queueForApplicationBundleID:(id)arg1;
+ (void)clearWithClientContext:(id)arg1;
+ (id)_cacheFilenamesInDir:(id)arg1;
+ (id)_metadataFilenames;
@property _Bool isEvictionScheduled; // @synthesize isEvictionScheduled=_isEvictionScheduled;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *expiryTimer; // @synthesize expiryTimer=_expiryTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(retain, nonatomic) NSString *assetCacheDir; // @synthesize assetCacheDir=_assetCacheDir;
@property(nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
@property(copy, nonatomic) id unregisterItemWithMMCSBlock; // @synthesize unregisterItemWithMMCSBlock=_unregisterItemWithMMCSBlock;
@property(readonly, nonatomic) CKSQLitePool *dbPool; // @synthesize dbPool=_dbPool;
- (void).cxx_destruct;
- (void)expireAssetHandlesIfNecessary;
- (void)_scheduleExpirationForAssetHandles;
- (void)_expireAssetHandles;
- (void)evictAllFetchedFiles;
- (void)evictFetchedFilesIfNecessary;
- (void)_evictFetchedFilesWithDatabase:(id)arg1 forced:(_Bool)arg2;
- (void)_evictFetchedFilesForced:(_Bool)arg1;
- (void)_scheduleEvictionForFetchedFiles;
- (int)openFileDescriptorForItemID:(unsigned long long)arg1 itemType:(id *)arg2 error:(id *)arg3;
- (void)stopTrackingAssetHandleByUUID:(id)arg1;
- (void)stopTrackingAssetHandlesByItemIDs:(id)arg1;
- (_Bool)startTrackingAssetHandles:(id)arg1 error:(id *)arg2;
- (id)addAssetHandleForTrackedFileURL:(id)arg1 UUID:(id)arg2 removeWhenDone:(_Bool)arg3 error:(id *)arg4;
- (id)addAssetHandleForFetchedFileURL:(id)arg1 itemID:(unsigned long long)arg2 signature:(id)arg3 error:(id *)arg4;
- (id)addAssetHandleForData:(id)arg1 signature:(id)arg2 error:(id *)arg3;
- (id)_addAssetHandleForFileURL:(id)arg1 signature:(id)arg2 itemID:(id)arg3 UUID:(id)arg4 removePolicy:(long long)arg5 error:(id *)arg6;
- (void)tearDown;
- (id)initWithClientContext:(id)arg1;

@end

