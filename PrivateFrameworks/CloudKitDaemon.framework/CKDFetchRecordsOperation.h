/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <CloudKitDaemon/CKDDatabaseOperation.h>

@class NSArray, NSDictionary, NSMapTable, NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_group>, NSOperation, NSSet;

@interface CKDFetchRecordsOperation : CKDDatabaseOperation
{
    _Bool _useCachedEtags;
    _Bool _shouldFetchAssetContent;
    id _recordFetchProgressBlock;
    id _recordFetchCompletionBlock;
    NSArray *_recordIDs;
    NSMutableDictionary *_cachedRecords;
    NSSet *_desiredKeySet;
    NSDictionary *_recordIDsToVersionETags;
    NSDictionary *_desiredPackageFileIndices;
    NSObject<OS_dispatch_group> *_fetchRecordsGroup;
    NSMutableDictionary *_assetFetchGroupsByRecord;
    NSMutableDictionary *_errorsByRecordID;
    NSMutableArray *_assetsToFetch;
    NSMutableArray *_packagesToFetch;
    NSMapTable *_desiredPackageFileIndexSetsByPackage;
    NSDictionary *_signaturesOfAssetsByRecordIDAndKey;
    NSOperation *_assetOperation;
    NSSet *_assetFieldNamesToPublishURLs;
    unsigned long long _requestedTTL;
    unsigned long long _URLOptions;
}

@property(nonatomic) unsigned long long URLOptions; // @synthesize URLOptions=_URLOptions;
@property(nonatomic) unsigned long long requestedTTL; // @synthesize requestedTTL=_requestedTTL;
@property(retain, nonatomic) NSSet *assetFieldNamesToPublishURLs; // @synthesize assetFieldNamesToPublishURLs=_assetFieldNamesToPublishURLs;
@property(retain, nonatomic) NSOperation *assetOperation; // @synthesize assetOperation=_assetOperation;
@property(nonatomic) _Bool shouldFetchAssetContent; // @synthesize shouldFetchAssetContent=_shouldFetchAssetContent;
@property(retain, nonatomic) NSDictionary *signaturesOfAssetsByRecordIDAndKey; // @synthesize signaturesOfAssetsByRecordIDAndKey=_signaturesOfAssetsByRecordIDAndKey;
@property(retain, nonatomic) NSMapTable *desiredPackageFileIndexSetsByPackage; // @synthesize desiredPackageFileIndexSetsByPackage=_desiredPackageFileIndexSetsByPackage;
@property(retain, nonatomic) NSMutableArray *packagesToFetch; // @synthesize packagesToFetch=_packagesToFetch;
@property(retain, nonatomic) NSMutableArray *assetsToFetch; // @synthesize assetsToFetch=_assetsToFetch;
@property(retain, nonatomic) NSMutableDictionary *errorsByRecordID; // @synthesize errorsByRecordID=_errorsByRecordID;
@property(retain, nonatomic) NSMutableDictionary *assetFetchGroupsByRecord; // @synthesize assetFetchGroupsByRecord=_assetFetchGroupsByRecord;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *fetchRecordsGroup; // @synthesize fetchRecordsGroup=_fetchRecordsGroup;
@property(retain, nonatomic) NSDictionary *desiredPackageFileIndices; // @synthesize desiredPackageFileIndices=_desiredPackageFileIndices;
@property(retain, nonatomic) NSDictionary *recordIDsToVersionETags; // @synthesize recordIDsToVersionETags=_recordIDsToVersionETags;
@property(retain, nonatomic) NSSet *desiredKeySet; // @synthesize desiredKeySet=_desiredKeySet;
@property(retain, nonatomic) NSMutableDictionary *cachedRecords; // @synthesize cachedRecords=_cachedRecords;
@property(retain, nonatomic) NSArray *recordIDs; // @synthesize recordIDs=_recordIDs;
@property(copy, nonatomic) id recordFetchCompletionBlock; // @synthesize recordFetchCompletionBlock=_recordFetchCompletionBlock;
@property(copy, nonatomic) id recordFetchProgressBlock; // @synthesize recordFetchProgressBlock=_recordFetchProgressBlock;
@property(nonatomic) _Bool useCachedEtags; // @synthesize useCachedEtags=_useCachedEtags;
- (void).cxx_destruct;
- (void)cancel;
- (void)finishWithError:(id)arg1;
- (void)main;
- (void)_enqueuePackage:(id)arg1 forRecord:(id)arg2;
- (void)_didFetchPackage:(id)arg1 withError:(id)arg2;
- (void)_fetchPackages;
- (void)_didFetchAsset:(id)arg1 withError:(id)arg2;
- (void)_fetchAssets;
- (void)_enqueueAsset:(id)arg1 forRecord:(id)arg2 ifSignatureMatches:(id)arg3;
- (void)_enqueueAssetContentFetchesForRecord:(id)arg1;
- (void)_handleRecordFetch:(id)arg1 recordID:(id)arg2 etagMatched:(_Bool)arg3 responseCode:(id)arg4;
- (void)_decryptPropertiesOnRecord:(id)arg1;
- (void)_continueHandleFetchedRecord:(id)arg1;
- (id)_assetFetchGroupForRecord:(id)arg1;
- (void)setError:(id)arg1 forRecordID:(id)arg2;
- (id)errorForRecordID:(id)arg1;
- (void)_fetchRecords;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

