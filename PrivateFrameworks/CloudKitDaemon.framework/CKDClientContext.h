/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "CKLoggingProtocol-Protocol.h"

@class CKAccountInfo, CKContainerID, CKDAccount, CKDAssetCache, CKDFlowControlManager, CKDMMCS, CKDPCSManager, CKDServerConfiguration, NSBundle, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSRunLoop, NSString, NSURL;

@interface CKDClientContext : NSObject <CKLoggingProtocol>
{
    _Bool _canAccessAccounts;
    _Bool _runLoopShouldRun;
    _Bool _accountRefreshInProgress;
    _Bool _accountReloadRequired;
    CKDServerConfiguration *_config;
    NSURL *_publicCloudDBURL;
    NSURL *_publicShareServiceURL;
    NSURL *_publicDeviceServiceURL;
    NSString *_containerScopedUserID;
    CKContainerID *_containerID;
    NSBundle *_applicationBundle;
    NSString *_applicationBundleID;
    NSString *_applicationVersion;
    NSString *_applicationDisplayName;
    NSString *_applicationContainerPath;
    NSString *_applicationCachesDirectory;
    NSString *_secondaryApplicationBundleID;
    NSString *_containerHardwareIDHash;
    long long _type;
    long long _usesAPSPublicToken;
    CKDAccount *_account;
    CKAccountInfo *_accountInfoOverride;
    CKDFlowControlManager *_flowControlManager;
    CKDAssetCache *_assetCache;
    CKDMMCS *_MMCS;
    CKDPCSManager *_pcsManager;
    NSMutableDictionary *_fakeErrorByClassName;
    NSRunLoop *_runLoop;
    NSObject<OS_dispatch_semaphore> *_sema;
    NSObject<OS_dispatch_queue> *_accountLoaderQueue;
}

+ (id)contextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2;
+ (id)_sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2;
+ (id)allClientContextsForAccountInfoOverride:(id)arg1;
+ (id)sharedContexts;
@property _Bool accountReloadRequired; // @synthesize accountReloadRequired=_accountReloadRequired;
@property _Bool accountRefreshInProgress; // @synthesize accountRefreshInProgress=_accountRefreshInProgress;
@property(retain) NSObject<OS_dispatch_queue> *accountLoaderQueue; // @synthesize accountLoaderQueue=_accountLoaderQueue;
@property _Bool runLoopShouldRun; // @synthesize runLoopShouldRun=_runLoopShouldRun;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *sema; // @synthesize sema=_sema;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSMutableDictionary *fakeErrorByClassName; // @synthesize fakeErrorByClassName=_fakeErrorByClassName;
@property(retain, nonatomic) CKDPCSManager *pcsManager; // @synthesize pcsManager=_pcsManager;
@property(readonly, nonatomic) CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
@property(retain, nonatomic) CKDAssetCache *assetCache; // @synthesize assetCache=_assetCache;
@property(retain, nonatomic) CKDFlowControlManager *flowControlManager; // @synthesize flowControlManager=_flowControlManager;
@property(nonatomic) _Bool canAccessAccounts; // @synthesize canAccessAccounts=_canAccessAccounts;
@property(readonly, nonatomic) CKAccountInfo *accountInfoOverride; // @synthesize accountInfoOverride=_accountInfoOverride;
@property(retain, nonatomic) CKDAccount *account; // @synthesize account=_account;
@property(nonatomic) long long usesAPSPublicToken; // @synthesize usesAPSPublicToken=_usesAPSPublicToken;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *containerHardwareIDHash; // @synthesize containerHardwareIDHash=_containerHardwareIDHash;
@property(retain, nonatomic) NSString *secondaryApplicationBundleID; // @synthesize secondaryApplicationBundleID=_secondaryApplicationBundleID;
@property(readonly, nonatomic) NSString *applicationCachesDirectory; // @synthesize applicationCachesDirectory=_applicationCachesDirectory;
@property(retain, nonatomic) NSString *applicationContainerPath; // @synthesize applicationContainerPath=_applicationContainerPath;
@property(readonly, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(retain, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(readonly, nonatomic) NSBundle *applicationBundle; // @synthesize applicationBundle=_applicationBundle;
@property(readonly, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) NSString *containerScopedUserID; // @synthesize containerScopedUserID=_containerScopedUserID;
@property(retain, nonatomic) NSURL *publicDeviceServiceURL; // @synthesize publicDeviceServiceURL=_publicDeviceServiceURL;
@property(retain, nonatomic) NSURL *publicShareServiceURL; // @synthesize publicShareServiceURL=_publicShareServiceURL;
@property(retain, nonatomic) NSURL *publicCloudDBURL; // @synthesize publicCloudDBURL=_publicCloudDBURL;
@property(retain, nonatomic) CKDServerConfiguration *config; // @synthesize config=_config;
- (void).cxx_destruct;
- (void)clearAuthTokensForRecordWithID:(id)arg1 inScope:(long long)arg2;
- (void)clearRecordCacheWithDatabaseScope:(long long)arg1;
- (void)clearAssetCacheWithDatabaseScope:(long long)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
@property(retain, nonatomic, setter=setAPSEnvironmentString:) NSString *apsEnvironmentString;
- (id)description;
- (id)CKPropertiesDescription;
@property(readonly, nonatomic) NSString *applicationRecordCacheDirectory;
@property(readonly, nonatomic) NSString *applicationAssetCacheDirectory;
- (void)logWithFile:(const char *)arg1 function:(const char *)arg2 line:(int)arg3 level:(int)arg4 section:(id)arg5 format:(id)arg6;
- (void)showUserNotification:(struct __CFUserNotification *)arg1 withCompletionBlock:(id)arg2;
- (void)performRequest:(id)arg1;
- (void)dealloc;
- (id)initWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2;
- (void)_determineHardwareInfo;
- (void)_loadApplicationContainerPathAndType;
- (void)reloadAccount;

@end

