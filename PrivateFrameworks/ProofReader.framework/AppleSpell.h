/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;

@interface AppleSpell : NSObject
{
    void *_proofReaderConnection;
    struct __CFDictionary *_databaseConnections;
    struct __CFDictionary *_languageModelDicts;
    double _lastWriteLanguageModels;
    double _lastDecayLanguageModels;
    double _lastReleaseLanguageModels;
    double _lastMaintainLanguageModels;
    unsigned long long _languageModelWordCount;
    NSMutableDictionary *_bindicts;
    NSMutableArray *_globalBindictDataArray;
    NSMutableArray *_globalNameBindictDataArray;
    NSMutableArray *_globalNegBindictDataArray;
    NSMutableDictionary *_autocorrections;
    NSString *_lastLanguage;
    NSArray *_userPreferredLanguages;
    NSArray *_userTopLanguages;
    NSMutableDictionary *_learnedResponses;
    NSMutableArray *_diagnosticInfo;
    NSMutableSet *_foundNames;
    double _lastFindNames;
    NSMutableSet *_foundShortcuts;
    NSMutableDictionary *_lastSampleCollected;
    unsigned long long _numberOfSamplesCollected;
    double _lastSampleCollection;
    NSMutableArray *_retainedSamples;
    NSMutableDictionary *_lastSampleRecorded;
    double _lastSampleRecording;
    NSMutableArray *_altBundleURLs;
    NSURL *_updateBundleURL;
    NSMutableDictionary *_languageCounts;
    double _lastLanguageCounts;
    NSMutableDictionary *_userAdaptationDictionary;
    _Bool _userPrefersUncheckedLatinLanguage;
}

- (_Bool)spellServer:(id)arg1 canChangeCaseOfFirstLetterInString:(id)arg2 toUpperCase:(_Bool)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 stringForInputString:(id)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 suggestWordWithLengthInRange:(struct _NSRange)arg2 language:(id)arg3;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestGuessesForWord:(id)arg2 inLanguage:(id)arg3;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 language:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 checkString:(id)arg2 offset:(unsigned long long)arg3 types:(unsigned long long)arg4 options:(id)arg5 orthography:(id)arg6 wordCount:(long long *)arg7;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5 correction:(id *)arg6;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 language:(id)arg3 wordCount:(long long *)arg4 countOnly:(_Bool)arg5;
- (struct _NSRange)spellServer:(id)arg1 findMisspelledWordInString:(id)arg2 range:(struct _NSRange)arg3 languages:(id)arg4 topLanguages:(id)arg5 orthography:(id)arg6 checkOrthography:(_Bool)arg7 mutableResults:(id)arg8 offset:(unsigned long long)arg9 autocorrect:(_Bool)arg10 keyEventData:(id)arg11 appIdentifier:(id)arg12 wordCount:(long long *)arg13 countOnly:(_Bool)arg14 correction:(id *)arg15;
- (id)_orthographyByModifyingOrthography:(id)arg1 withLatinLanguage:(id)arg2;
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 language:(id)arg3 details:(id *)arg4;
- (struct _NSRange)spellServer:(id)arg1 checkGrammarInString:(id)arg2 range:(struct _NSRange)arg3 language:(id)arg4 orthography:(id)arg5 mutableResults:(id)arg6 offset:(unsigned long long)arg7 details:(id *)arg8;
- (_Bool)_checkGrammarInString:(id)arg1 range:(struct _NSRange)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 bufIO:(struct _PR_BUF_IO *)arg6 errorRange:(struct _NSRange *)arg7 details:(id *)arg8;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkNames:(_Bool)arg8 checkHyphens:(_Bool)arg9 checkIntercaps:(_Bool)arg10 checkOptions:(_Bool)arg11 depth:(unsigned long long)arg12;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkNames:(_Bool)arg9 checkHyphens:(_Bool)arg10 checkIntercaps:(_Bool)arg11 checkOptions:(_Bool)arg12 depth:(unsigned long long)arg13;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 checkBase:(_Bool)arg6 checkDict:(_Bool)arg7 checkTemp:(_Bool)arg8 checkUser:(_Bool)arg9 checkNames:(_Bool)arg10 checkHyphens:(_Bool)arg11 checkIntercaps:(_Bool)arg12 checkOptions:(_Bool)arg13 depth:(unsigned long long)arg14;
- (_Bool)validateAbbreviationOrNumberWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 connection:(struct _PR_DB_IO *)arg5 sender:(id)arg6;
- (_Bool)validateWordPrefixBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (_Bool)validateWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4;
- (_Bool)checkNegativeWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 depth:(unsigned long long)arg5;
- (_Bool)checkNoPredictWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4;
- (_Bool)checkNameWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 globalOnly:(_Bool)arg5;
- (_Bool)checkWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 encoding:(unsigned int)arg4 index:(unsigned long long)arg5;
- (id)linguisticTaggerForLanguage:(id)arg1 string:(id)arg2 range:(struct _NSRange)arg3 taggerIndex:(unsigned long long *)arg4;
- (void)setUpdateBundleURL:(id)arg1;
- (void)addAlternateDataBundleURL:(id)arg1;
- (void)clearCaches;
- (id)autocorrectionDictionaryForLanguage:(id)arg1;
- (id)globalNegativeBindictDataArray;
- (id)globalNameBindictDataArray;
- (id)globalBindictDataArray;
- (id)bindictDataForLanguage:(id)arg1 index:(unsigned long long)arg2;
- (id)bindictDataArrayForLanguage:(id)arg1 index:(unsigned long long)arg2;
- (struct _PR_DB_IO *)databaseConnectionForLanguage:(id)arg1;
- (unsigned int)encodingForLanguage:(id)arg1;
- (id)fallbackLocalizationForLanguage:(id)arg1;
- (id)localizationForLanguage:(id)arg1;
- (id)localizationsForLanguage:(id)arg1;
- (id)bundle;
- (id)init;
- (void)_findAlternateDataBundleURLs;
- (void)resetTimer;
- (void)timeout:(id)arg1;
- (unsigned long long)numberOfTurkishSuffixPointsInBuffer:(char *)arg1 length:(unsigned long long)arg2 maxSuffixPoints:(unsigned long long)arg3 suffixPoints:(CDStruct_b54abf8e *)arg4;
- (_Bool)_checkEnglishGrammarInString:(id)arg1 range:(struct _NSRange)arg2 indexIntoBuffer:(unsigned long long)arg3 bufferLength:(unsigned long long)arg4 language:(id)arg5 connection:(struct _PR_DB_IO *)arg6 sender:(id)arg7 bufIO:(struct _PR_BUF_IO *)arg8 retval:(int *)arg9 errorRange:(struct _NSRange *)arg10 details:(id *)arg11;
- (id)_detailWithRange:(struct _NSRange)arg1 description:(id)arg2 corrections:(id)arg3;
- (id)_correctionForSuggestedPhrase:(const char *)arg1 originalBuffer:(const char *)arg2 length:(unsigned long long)arg3;
- (id)_modifiedGrammarDescriptionForDescription:(id)arg1;
- (id)_crudePreviousWordInString:(id)arg1 inRange:(struct _NSRange)arg2;
- (id)_crudePreviousWordInString:(id)arg1 inRange:(struct _NSRange)arg2 precededBy:(id *)arg3;
- (id)_crudeNextWordInString:(id)arg1 inRange:(struct _NSRange)arg2;
- (_Bool)onNoContractionList:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)onContractionList:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)looksLikeParticiple:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)looksLikeAdverb:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3 sender:(id)arg4;
- (_Bool)looksLikeArticledNoun:(id)arg1 language:(id)arg2 connection:(struct _PR_DB_IO *)arg3;
- (id)spellServer:(id)arg1 suggestWordWithMinimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3 language:(id)arg4;
- (id)spellServer:(id)arg1 suggestNextLetterDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionDictionariesForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestCompletionsForPartialWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)spellServer:(id)arg1 suggestGuessesForWordRange:(struct _NSRange)arg2 inString:(id)arg3 inLanguage:(id)arg4 options:(id)arg5;
- (id)_correctionForString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 tagger:(id)arg4 taggerIndex:(unsigned long long)arg5 appIdentifier:(id)arg6 dictionary:(id)arg7 language:(id)arg8 connection:(struct _PR_DB_IO *)arg9 keyEventData:(id)arg10 alternativeCorrection:(id *)arg11 isApostropheInsertion:(_Bool *)arg12;
- (void)_addBasicGuessesForWordBuffer:(char *)arg1 length:(unsigned long long)arg2 language:(id)arg3 connection:(struct _PR_DB_IO *)arg4 sender:(id)arg5 toGuesses:(id)arg6;
- (id)_japaneseCorrectionForString:(id)arg1 connection:(struct _PR_DB_IO *)arg2;
- (id)spellServer:(id)arg1 finalModificationsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 modificationsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedFinalModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 _retainedModificationsForPinyinInputString:(id)arg2 geometryModelData:(id)arg3;
- (id)spellServer:(id)arg1 correctionsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedCorrectionsForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 prefixesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedPrefixesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 extendedAlternativesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 alternativesForPinyinInputString:(id)arg2;
- (id)spellServer:(id)arg1 _retainedAlternativesForPinyinInputString:(id)arg2 extended:(_Bool)arg3;
- (id)_recursiveRetainedAlternativesForPinyinInputString:(id)arg1 depth:(unsigned long long)arg2;
- (id)_retainedAlternativesByCombiningAlternatives:(id)arg1 withAlternatives:(id)arg2 andAddingAlternatives:(id)arg3;
- (id)_pinyinStringByCombiningPinyinString:(id)arg1 withPinyinString:(id)arg2;
- (unsigned long long)_getSplitIndexes:(unsigned long long *)arg1 maxCount:(unsigned long long)arg2 forPinyinInputString:(id)arg3;
- (id)_primitiveRetainedAlternativesForPinyinInputString:(id)arg1;
- (void)addModifiedPartialPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 prePrevPrevIndex:(unsigned long long)arg6 startingModificationsAt:(unsigned long long)arg7 inBuffer:(char *)arg8 length:(unsigned long long)arg9 initialSyllableCount:(unsigned long long)arg10 initialScore:(unsigned long long)arg11 prevScore:(unsigned long long)arg12 prevPrevScore:(unsigned long long)arg13 lastSyllableScore:(unsigned long long)arg14;
- (void)addModifiedPinyinToArray:(id)arg1 connection:(struct _PR_DB_IO *)arg2 fromIndex:(unsigned long long)arg3 prevIndex:(unsigned long long)arg4 prevPrevIndex:(unsigned long long)arg5 startingModificationsAt:(unsigned long long)arg6 inBuffer:(char *)arg7 length:(unsigned long long)arg8 initialSyllableCount:(unsigned long long)arg9 initialScore:(unsigned long long)arg10 prevScore:(unsigned long long)arg11 prevPrevScore:(unsigned long long)arg12 lastSyllableScore:(unsigned long long)arg13 couldBeAbbreviatedPinyin:(_Bool)arg14;
- (void)addSpecialModifiedPinyinToArray:(id)arg1 inBuffer:(char *)arg2 length:(unsigned long long)arg3 atEnd:(_Bool)arg4;
- (id)englishStringFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (id)englishStringsFromWordBuffer:(char *)arg1 length:(unsigned long long)arg2 connection:(struct _PR_DB_IO *)arg3;
- (id)spellServer:(id)arg1 suggestGuessesForKoreanWordRange:(struct _NSRange)arg2 inString:(id)arg3 options:(id)arg4;
- (id)_correctionForKoreanString:(id)arg1 range:(struct _NSRange)arg2 inString:(id)arg3 tagger:(id)arg4 taggerIndex:(unsigned long long)arg5 appIdentifier:(id)arg6 dictionary:(id)arg7 keyEventData:(id)arg8 alternativeCorrection:(id *)arg9;
- (void)addGuessesForKoreanWord:(id)arg1 toMutableArray:(id)arg2 includeAdditionalGuesses:(_Bool)arg3;

@end

