/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSString, NSThread;

@interface AXEventProcessor : NSObject
{
    _Bool _shouldRunHIDReceiveThreadRunloop;
    _Bool _shouldNotifyUserEventOccurred;
    _Bool _ignoreAllHIDEvents;
    _Bool _ignoreAllSystemEvents;
    _Bool _handlingHIDEvents;
    _Bool _handlingSystemEvents;
    int _HIDEventTapPriority;
    int _systemEventTapPriority;
    NSString *_HIDEventTapIdentifier;
    NSThread *_HIDEventReceiveThread;
    id _HIDEventHandler;
    NSString *_systemEventTapIdentifier;
    id _systemEventHandler;
}

@property(nonatomic, getter=isHandlingSystemEvents) _Bool handlingSystemEvents; // @synthesize handlingSystemEvents=_handlingSystemEvents;
@property(nonatomic, getter=isHandlingHIDEvents) _Bool handlingHIDEvents; // @synthesize handlingHIDEvents=_handlingHIDEvents;
@property(nonatomic) _Bool ignoreAllSystemEvents; // @synthesize ignoreAllSystemEvents=_ignoreAllSystemEvents;
@property(copy, nonatomic) id systemEventHandler; // @synthesize systemEventHandler=_systemEventHandler;
@property(nonatomic) int systemEventTapPriority; // @synthesize systemEventTapPriority=_systemEventTapPriority;
@property(retain, nonatomic) NSString *systemEventTapIdentifier; // @synthesize systemEventTapIdentifier=_systemEventTapIdentifier;
@property(nonatomic) _Bool ignoreAllHIDEvents; // @synthesize ignoreAllHIDEvents=_ignoreAllHIDEvents;
@property(copy, nonatomic) id HIDEventHandler; // @synthesize HIDEventHandler=_HIDEventHandler;
@property(retain, nonatomic) NSThread *HIDEventReceiveThread; // @synthesize HIDEventReceiveThread=_HIDEventReceiveThread;
@property(nonatomic) int HIDEventTapPriority; // @synthesize HIDEventTapPriority=_HIDEventTapPriority;
@property(retain, nonatomic) NSString *HIDEventTapIdentifier; // @synthesize HIDEventTapIdentifier=_HIDEventTapIdentifier;
@property(nonatomic) _Bool shouldNotifyUserEventOccurred; // @synthesize shouldNotifyUserEventOccurred=_shouldNotifyUserEventOccurred;
- (void)_uninstallSystemEventFilter;
- (void)_installSystemEventFilter;
- (void)_uninstallHIDEventFilter;
- (void)_installHIDEventFilter;
- (void)_runHIDEventReceiveThread;
- (void)restoreSystemEventTapPriorityToDefault;
- (void)raiseSystemEventTapPriorityToMaximum;
- (void)endHandlingSystemEvents;
- (void)beginHandlingSystemEvents;
- (void)restoreHIDEventTapPriorityToDefault;
- (void)raiseHIDEventTapPriorityToMaximum;
- (void)endHandlingHIDEvents;
- (void)beginHandlingHIDEvents;
- (void)dealloc;
- (id)initWithHIDTapIdentifier:(id)arg1 HIDEventTapPriority:(int)arg2 systemEventTapIdentifier:(id)arg3 systemEventTapPriority:(int)arg4;

@end

