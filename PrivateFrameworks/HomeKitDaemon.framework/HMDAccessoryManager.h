/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "HAPAccessoryServerBrowserDelegate-Protocol.h"
#import "HAPAccessoryServerDelegate-Protocol.h"

@class HAPAccessoryServerBrowserIP, NSMapTable, NSMutableArray, NSMutableSet, NSObject<OS_dispatch_queue>;

@interface HMDAccessoryManager : NSObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMapTable *_delegates;
    NSMutableSet *_pairedAccessories;
    NSMutableSet *_unpairedAccessories;
    NSMutableSet *_discoveredAccessoryServers;
    NSMapTable *_addAccessoryCompletionHandlersForAccessoryServers;
    NSMapTable *_pairingRetryTimersForAccessoryServers;
    NSMutableArray *_accessoryServerBrowsers;
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;
}

@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(retain, nonatomic) NSMapTable *pairingRetryTimersForAccessoryServers; // @synthesize pairingRetryTimersForAccessoryServers=_pairingRetryTimersForAccessoryServers;
@property(retain, nonatomic) NSMapTable *addAccessoryCompletionHandlersForAccessoryServers; // @synthesize addAccessoryCompletionHandlersForAccessoryServers=_addAccessoryCompletionHandlersForAccessoryServers;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServers; // @synthesize discoveredAccessoryServers=_discoveredAccessoryServers;
@property(retain, nonatomic) NSMutableSet *unpairedAccessories; // @synthesize unpairedAccessories=_unpairedAccessories;
@property(retain, nonatomic) NSMutableSet *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(retain, nonatomic) NSMapTable *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)_removeUnreachableAccessory:(id)arg1 completionHandler:(id)arg2;
- (id)_removePairedAccessoriesForServer:(id)arg1;
- (void)_updatePairedAccessoriesForServer:(id)arg1;
- (void)_createPairedAccessoriesForUnpairedAccessory:(id)arg1 server:(id)arg2;
- (id)_unpairedAccessoryForServer:(id)arg1;
- (void)accessoryServer:(id)arg1 didDiscoverAccessoriesWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2;
- (void)removePairingOnAccessory:(id)arg1 forController:(id)arg2 publicKey:(id)arg3 withCompletionHandler:(id)arg4;
- (void)addPairingOnAccessory:(id)arg1 forController:(id)arg2 publicKey:(id)arg3 withCompletionHandler:(id)arg4;
- (void)_updatePairingRetryTimerForServer:(id)arg1 delay:(long long)arg2;
- (void)_sendPairingCompletionStatusForServer:(id)arg1 accessories:(id)arg2 error:(id)arg3;
- (void)_promptForPairingPasswordForServer:(id)arg1;
- (void)removeAccessory:(id)arg1 completionHandler:(id)arg2;
- (void)_pairAccessory:(id)arg1 password:(id)arg2 completionHandler:(id)arg3;
- (void)pairAccessory:(id)arg1 password:(id)arg2 completionHandler:(id)arg3;
- (void)_notifyDelegatesOfPairedAccessories:(id)arg1 removedFromBridgeAccessory:(id)arg2;
- (void)_notifyDelegatesOfPairedAccessories:(id)arg1 addedToBridgeAccessory:(id)arg2;
- (void)_notifyDelegatesOfRemovedNewAccessory:(id)arg1;
- (void)_notifyDelegatesOfNewAccessory:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
- (void)_stopDiscoveringAccessories;
- (void)stopDiscoveringAccessories;
- (void)_startDiscoveringAccessories;
- (void)startDiscoveringAccessories;
- (id)allUnpairedAccessories;
- (id)allPairedAccessories;
- (id)accessoryWithUUID:(id)arg1;
- (id)initWithPairedAccessories:(id)arg1;

@end

