/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "CALayer.h"

#import "GGLLayerDisruptor-Protocol.h"
#import "GGLRenderQueueSource-Protocol.h"
#import "MDMapControllerDelegate-Protocol.h"
#import "VKInteractiveMapDelegate-Protocol.h"

@class CADisplay, GEOMapRegion, GGLDisplayLink, MDDisplayLayer, NSArray, NSString, VKAnimation, VKClassicGlobeCanvas, VKLabelMarker, VKMapCanvas, VKMemoryObserver, VKPolylineOverlayPainter, VKStyleManager;

@interface VKMapView : CALayer <VKInteractiveMapDelegate, MDMapControllerDelegate, GGLLayerDisruptor, GGLRenderQueueSource>
{
    long long _mapType;
    VKMapCanvas *_canvas;
    VKClassicGlobeCanvas *_globe;
    MDDisplayLayer *_mapLayer;
    id <VKMapViewDelegate> _mapDelegate;
    _Bool _loaderOpen;
    NSString *_tileLoaderClientID;
    unsigned long long _mapDisplayStyle;
    VKAnimation *_mapDisplayStyleAnimation;
    VKAnimation *_edgeInsetAnimation;
    struct VKEdgeInsets _animatingToEdgeInsets;
    _Bool _isChangingMapType;
    unsigned long long _regionChangeCount;
    _Bool _containsOverlay;
    double _verticalYaw;
    VKLabelMarker *_selectedLabelMarker;
    unsigned int _applicationState;
    VKMemoryObserver *_memoryObserver;
    GGLDisplayLink *_displayLink;
    long long _displayRate;
    long long _requestedRate;
    shared_ptr_06328420 _renderQueue;
}

@property(nonatomic) unsigned int applicationState; // @synthesize applicationState=_applicationState;
@property(readonly, nonatomic) double verticalYaw; // @synthesize verticalYaw=_verticalYaw;
@property(nonatomic) id <VKMapViewDelegate> mapDelegate; // @synthesize mapDelegate=_mapDelegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)map:(id)arg1 didUpdateVerticalYawTo:(double)arg2;
- (void)removeExternalAnchor:(id)arg1;
- (void)addExternalAnchor:(id)arg1;
- (void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;
@property(nonatomic) double userZoomFocusStyleMaxGroundspanMeters;
@property(nonatomic) double userZoomFocusStyleMinGroundspanMeters;
@property(nonatomic) double userZoomFocusStyleGroundspanMeters;
- (void)setDebugDynamicMapModesEnabled:(_Bool)arg1;
- (_Bool)debugDynamicMapModesEnabled;
- (void)setRouteLineSplitAnnotation:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct VKPoint)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_b926a728 *)arg2;
@property(nonatomic) _Bool rendersInBackground;
- (void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4;
- (_Bool)gridDisabled;
- (_Bool)realisticLandDisabled;
- (_Bool)realisticRoadsDisabled;
- (_Bool)rastersDisabled;
- (_Bool)buildingFootprintsDisabled;
- (_Bool)polygonsDisabled;
- (_Bool)labelsDisabled;
- (_Bool)roadsDisabled;
@property(readonly, nonatomic, getter=isFullyDrawn) _Bool fullyDrawn;
- (_Bool)roadClassDisabled:(int)arg1;
- (void)setDisableGrid:(_Bool)arg1;
- (void)setDisableRealisticLand:(_Bool)arg1;
- (void)setDisableRealisticRoads:(_Bool)arg1;
- (void)setDisableRoadClass:(_Bool)arg1 forRoadClass:(int)arg2;
- (void)setDisableRasters:(_Bool)arg1;
- (void)setDisableBuildingFootprints:(_Bool)arg1;
- (void)setDisablePolygons:(_Bool)arg1;
- (void)setDisableLabels:(_Bool)arg1;
- (void)setDisableRoads:(_Bool)arg1;
- (void)stopSnappingAnimations;
- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)didStartPanningDeceleration;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1 panAtStartPoint:(_Bool)arg2;
- (void)startPanningAtPoint:(struct CGPoint)arg1;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(id)arg3;
- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;
- (void)didDrawWithTimestamp:(double)arg1;
- (RenderQueue_e4212455 *)renderQueue;
- (void)resetRenderQueue;
- (void)mapControllerNeedsInitialization:(id)arg1;
- (void)mapController:(id)arg1 requestsDisplayRate:(long long)arg2;
- (void)mapControllerNeedsDisplay:(id)arg1;
- (_Bool)updateDisplayLinkStatus;
- (void)onTimerFired:(id)arg1;
- (void)_updateMapDisplayStyle;
- (void)map:(id)arg1 didUpdateContainsOverlay:(_Bool)arg2;
- (void)map:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;
- (void)map:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapDidFinishChangingMapDisplayStyle:(unsigned long long)arg1;
- (void)map:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;
- (void)map:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;
- (void)map:(id)arg1 canZoomOutDidChange:(_Bool)arg2;
- (void)map:(id)arg1 canZoomInDidChange:(_Bool)arg2;
- (void)map:(id)arg1 didBecomePitched:(_Bool)arg2;
- (void)mapDidBecomePartiallyDrawn:(id)arg1;
- (void)mapDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(_Bool)arg2;
- (id)map:(id)arg1 painterForOverlay:(id)arg2;
- (id)map:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)map:(id)arg1 didChangeRegionAnimated:(_Bool)arg2;
- (void)map:(id)arg1 willChangeRegionAnimated:(_Bool)arg2;
- (void)mapDidChangeVisibleRegion:(id)arg1;
- (void)mapDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapDidFinishLoadingTiles:(id)arg1;
- (void)mapDidStartLoadingTiles:(id)arg1;
@property(retain, nonatomic) VKPolylineOverlayPainter *focusedLabelsPolylinePainter;
- (_Bool)restoreViewportFromInfo:(id)arg1;
- (id)viewportInfo;
- (void)setCurrentLocationText:(id)arg1;
- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;
- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)removeRasterOverlay:(id)arg1;
- (void)addRasterOverlay:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)setTracePlaybackSpeedMultiplier:(double)arg1;
@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) _Bool animatingToTrackAnnotation;
- (void)stopTrackingAnnotation;
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(_Bool)arg2 animated:(_Bool)arg3;
@property(nonatomic) long long annotationTrackingZoomStyle;
@property(nonatomic) double trackingZoomScale;
@property(readonly, nonatomic) NSArray *labelMarkers;
@property(readonly, nonatomic) NSArray *annotationMarkers;
@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;
- (_Bool)shouldHideOffscreenSelectedAnnotation;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)setAnnotationMarkerDeselectionCallback:(id)arg1;
- (void)deselectAnnotationMarker:(id)arg1;
- (void)selectAnnotationMarker:(id)arg1;
- (void)removeAnnotationMarker:(id)arg1;
- (void)addAnnotationMarker:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(_Bool)arg3 duration:(double)arg4 completionHandler:(id)arg5;
@property(readonly, nonatomic) _Bool canShowFlyover;
@property(readonly, nonatomic, getter=isShowingFlyover) _Bool showingFlyover;
@property(readonly, nonatomic) _Bool canEnter3DMode;
@property(readonly, nonatomic, getter=isFullyPitched) _Bool fullyPitched;
@property(readonly, nonatomic, getter=isPitched) _Bool pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (void)deselectLabelMarker;
- (void)selectLabelMarker:(id)arg1;
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;
- (id)annotationMarkerForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(_Bool)arg2;
@property(retain, nonatomic) NSArray *externalTrafficIncidents;
@property(retain, nonatomic) id <GEORoutePreloadSession> routePreloadSession;
- (void)preloadNavigationSceneResources;
@property(nonatomic) int trackingCameraPanStyle;
- (void)setShouldLimitTrackingCameraHeight:(_Bool)arg1;
- (void)transitionToTracking:(_Bool)arg1 mapMode:(long long)arg2 pounceCompletionHandler:(id)arg3;
- (void)pauseTracking;
- (void)stopTracking;
- (void)updateCameraContext:(id)arg1;
- (id)flyoverStatistics;
- (void)disableFlyoverStatistics;
- (void)enableFlyoverStatistics;
- (void)resumeFlyoverTourAnimation;
- (void)pauseFlyoverTourAnimation;
- (void)stopFlyoverAnimation;
- (void)startFlyoverTourAnimation:(unsigned long long)arg1 animateToStart:(_Bool)arg2 completion:(id)arg3;
- (void)startFlyoverAnimation:(id)arg1;
- (void)prepareFlyoverAnimation:(id)arg1 inBackground:(_Bool)arg2 completion:(id)arg3;
@property(readonly, nonatomic) _Bool canShowFlyoverAnimation;
- (void)showSearchResultAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 withMapRegion:(id)arg2;
- (_Bool)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
@property(nonatomic) struct VKEdgeInsets labelEdgeInsets;
@property(nonatomic) struct VKEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct VKEdgeInsets edgeInsets;
- (void)setEdgeInsets:(struct VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(id)arg4;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;
- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;
- (void)setCenterCoordinate:(CDStruct_071ac149)arg1 animated:(_Bool)arg2;
- (double)durationToAnimateToMapRegion:(id)arg1;
- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4;
- (void)setYaw:(double)arg1 animated:(_Bool)arg2;
- (void)setMapRegion:(id)arg1 animated:(_Bool)arg2;
- (void)runAnimation:(id)arg1;
- (void)renderInContext:(struct CGContext *)arg1;
- (void)setContentsScale:(double)arg1;
- (void)dealloc;
- (id)initWithGlobe:(_Bool)arg1 shouldRasterize:(_Bool)arg2 inBackground:(_Bool)arg3;
@property(nonatomic) _Bool allowDatelineWraparound;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(id)arg6 completion:(void)arg7;
@property(nonatomic) CDStruct_071ac149 centerCoordinate;
- (id)consoleString:(_Bool)arg1;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
@property(readonly, nonatomic) double altitude;
@property(readonly, nonatomic) double pitch;
@property(readonly, nonatomic) double presentationYaw;
@property(readonly, nonatomic) double yaw;
- (struct CGRect)mapRegionBounds;
- (void)setBounds:(struct CGRect)arg1;
- (void)_setStyleTransitionProgress:(double)arg1 targetStyle:(unsigned long long)arg2 step:(long long)arg3;
- (double)_styleTransitionProgress;
- (void)setMapDisplayStyle:(unsigned long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long mapDisplayStyle;
- (void)_updateBackgroundColor;
@property(nonatomic) long long mapType;
- (_Bool)supportsNightMode;
- (_Bool)supportsMapType:(long long)arg1;
- (void)_createGlobe;
- (void)setCanonicalSkyHeight:(double)arg1;
@property(nonatomic) _Bool dynamicMapModesEnabled;
- (void)setDesiredMapMode:(long long)arg1 immediate:(_Bool)arg2;
@property(nonatomic) _Bool showsBuildings;
@property(nonatomic) _Bool showsPointsOfInterest;
@property(nonatomic) long long shieldIdiom;
@property(nonatomic) long long navigationShieldSize;
@property(nonatomic) long long shieldSize;
- (double)zoomLevelAdjustmentForTileSize:(long long)arg1;
- (double)currentZoomLevelForTileSize:(long long)arg1;
@property(readonly, nonatomic) double currentZoomLevel;
- (double)maximumZoomLevelForTileSize:(long long)arg1;
@property(readonly, nonatomic) double maximumZoomLevel;
- (double)topDownMinimumZoomLevelForTileSize:(long long)arg1;
- (double)minimumZoomLevelForTileSize:(long long)arg1;
@property(readonly, nonatomic) double minimumZoomLevel;
- (_Bool)canZoomOutForTileSize:(long long)arg1;
- (_Bool)canZoomInForTileSize:(long long)arg1;
@property(nonatomic) _Bool iconsShouldAlignToPixels;
@property(nonatomic, getter=isGesturing) _Bool gesturing;
- (id)detailedDescription;
@property(nonatomic) _Bool shouldLoadMapMargin;
@property(nonatomic) _Bool shouldLoadFallbackTiles;
- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) _Bool enableDebugLabelHighlighting;
@property(retain, nonatomic) CADisplay *hostDisplay;
- (_Bool)isEffectivelyHidden;
- (void)didReceiveMemoryWarning;
- (void)setHidden:(_Bool)arg1;
- (void)clearScene;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)debugFlyoverTour:(unsigned int)arg1 trip:(unsigned int)arg2;
- (void)debugRunPerformanceTestWithOutputHeader:(id)arg1;
@property(readonly, nonatomic) float debugFramesPerSecond;
@property(nonatomic) _Bool debugEnableMultisampling;
@property(nonatomic) _Bool debugLayoutContinuously;
@property(nonatomic) _Bool debugDrawContinuously;
@property(nonatomic) _Bool isPitchable;
@property(nonatomic) _Bool staysCenteredDuringRotation;
@property(nonatomic) _Bool staysCenteredDuringPinch;
@property(nonatomic) long long labelScaleFactor;
@property(nonatomic) _Bool localizeLabels;
- (_Bool)currentZoomLevelAllowsRotation;
- (void)flushTileLoads;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (void)_createDisplayLayer;
- (void)_updateDisplayRate;
@property(nonatomic) long long displayRate;
@property(nonatomic) _Bool trafficEnabled;
@property(nonatomic) long long targetDisplay;
- (void)reloadStylesheet;
@property(retain, nonatomic) VKStyleManager *styleManager;
- (_Bool)stylesheetIsDevResource;
- (id)stylesheetName;
- (void)setStylesheetName:(id)arg1;
- (_Bool)isShowingNoDataPlaceholders;
- (id)attributionsForCurrentRegion;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (void)forceLayout;
- (id)secondaryCanvas;
- (id)currentCanvas;
- (void)closeLoaderConnection;
- (void)openLoaderConnection;
- (void)forceSceneLoad;
@property(nonatomic, getter=isLabelMarkerSelectionEnabled) _Bool labelMarkerSelectionEnabled;
- (void)_resetMaximumZoomLevel;
- (void)_setMaximumZoomLevel:(double)arg1;
@property(readonly, nonatomic) VKMapCanvas *mapCanvas;

@end

