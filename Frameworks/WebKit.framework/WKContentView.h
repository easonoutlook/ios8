/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UIView.h"

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITextInputPrivate-Protocol.h"
#import "UIWKInteractionViewProtocol-Protocol.h"
#import "UIWebFormAccessoryDelegate-Protocol.h"
#import "UIWebTouchEventsGestureRecognizerDelegate-Protocol.h"
#import "WKFileUploadPanelDelegate-Protocol.h"

@class NSDictionary, NSString, UIColor, UIImage, UITextInteractionAssistant, UITextPosition, UITextRange, UIWebFormAccessory, WKBrowsingContextController, WKWebView;

// Not exported
@interface WKContentView : UIView <UIGestureRecognizerDelegate, UIWebTouchEventsGestureRecognizerDelegate, UITextInputPrivate, UIWebFormAccessoryDelegate, UIWKInteractionViewProtocol, WKFileUploadPanelDelegate>
{
    struct RefPtr<WebKit::WebPageProxy> _page;
    WKWebView *_webView;
    struct RetainPtr<UIWebTouchEventsGestureRecognizer> _touchEventGestureRecognizer;
    _Bool _canSendTouchEventsAsynchronously;
    struct RetainPtr<WKSyntheticClickTapGestureRecognizer> _singleTapGestureRecognizer;
    struct RetainPtr<_UIWebHighlightLongPressGestureRecognizer> _highlightLongPressGestureRecognizer;
    struct RetainPtr<UILongPressGestureRecognizer> _longPressGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> _doubleTapGestureRecognizer;
    struct RetainPtr<UITapGestureRecognizer> _twoFingerDoubleTapGestureRecognizer;
    struct RetainPtr<UIWKTextInteractionAssistant> _textSelectionAssistant;
    struct RetainPtr<UIWKSelectionAssistant> _webSelectionAssistant;
    struct RetainPtr<UITextInputTraits> _traits;
    struct RetainPtr<UIWebFormAccessory> _formAccessoryView;
    struct RetainPtr<UIView> _highlightRootView;
    struct RetainPtr<_UIHighlightView> _highlightView;
    struct RetainPtr<NSString> _markedText;
    struct RetainPtr<WKActionSheetAssistant> _actionSheetAssistant;
    struct RetainPtr<WKAirPlayRoutePicker> _airPlayRoutePicker;
    struct RetainPtr<WKFormInputSession> _formInputSession;
    struct RetainPtr<WKFileUploadPanel> _fileUploadPanel;
    struct unique_ptr<WebKit::SmartMagnificationController, std::__1::default_delete<WebKit::SmartMagnificationController>> _smartMagnificationController;
    id <UITextInputDelegate> _inputDelegate;
    unsigned long long _latestTapHighlightID;
    struct unique_ptr<TapHighlightInformation, std::__1::default_delete<TapHighlightInformation>> _potentialTapHighlightInformation;
    struct WKAutoCorrectionData _autocorrectionData;
    struct InteractionInformationAtPosition _positionInformation;
    struct AssistedNodeInformation _assistedNodeInformation;
    struct RetainPtr<NSObject<WKFormPeripheral>> _inputPeripheral;
    struct CGPoint _lastInteractionLocation;
    _Bool _isEditable;
    _Bool _showingTextStyleOptions;
    _Bool _hasValidPositionInformation;
    _Bool _isTapHighlightIDValid;
    _Bool _potentialTapInProgress;
    _Bool _selectionNeedsUpdate;
    _Bool _usingGestureForSelection;
    struct unique_ptr<WebKit::PageClientImpl, std::__1::default_delete<WebKit::PageClientImpl>> _pageClient;
    struct RetainPtr<WKBrowsingContextController> _browsingContextController;
    struct RetainPtr<UIView> _rootContentView;
    struct RetainPtr<WKInspectorIndicationView> _inspectorIndicationView;
    struct HistoricalVelocityData _historicalKinematicData;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_setFindIndicator:(PassRefPtr_c0ab1a11)arg1 fadeOut:(_Bool)arg2 animate:(_Bool)arg3;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_zoomOutWithOrigin:(struct CGPoint)arg1;
- (_Bool)_zoomToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 fitEntireRect:(_Bool)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 minimumScrollDistance:(double)arg6;
- (void)_zoomToFocusRect:(struct CGRect)arg1 selectionRect:(struct CGRect)arg2 fontSize:(float)arg3 minimumScale:(double)arg4 maximumScale:(double)arg5 allowScaling:(_Bool)arg6 forceScroll:(_Bool)arg7;
- (_Bool)_scrollToRect:(struct CGRect)arg1 withOrigin:(struct CGPoint)arg2 minimumScrollDistance:(double)arg3;
- (void)_decidePolicyForGeolocationRequestFromOrigin:(struct WebSecurityOrigin *)arg1 frame:(struct WebFrameProxy *)arg2 request:(struct GeolocationPermissionRequestProxy *)arg3;
- (void)_setAcceleratedCompositingRootView:(id)arg1;
- (void)_didCommitLayerTree:(const struct RemoteLayerTreeTransaction *)arg1;
- (void)_didCommitLoadForMainFrame;
- (void)_didRelaunchProcess;
- (void)_processDidExit;
- (unique_ptr_54a90528)_createDrawingAreaProxy;
- (void)_accessibilityRegisterUIProcessTokens;
- (void)_setAccessibilityWebProcessToken:(id)arg1;
- (void)_updateForScreen:(id)arg1;
- (void)_windowDidMoveToScreenNotification:(id)arg1;
- (void)didZoomToScale:(double)arg1;
- (void)willStartUserTriggeredZoom;
- (void)willStartUserTriggeredScroll;
- (void)willStartZoomOrScroll;
- (void)didFinishScrolling;
- (void)setMinimumSize:(struct CGSize)arg1;
- (void)didUpdateVisibleRect:(struct CGRect)arg1 unobscuredRect:(struct CGRect)arg2 unobscuredRectInScrollViewCoordinates:(struct CGRect)arg3 scale:(double)arg4 inStableState:(_Bool)arg5 isChangingObscuredInsetsInteractively:(_Bool)arg6;
@property(nonatomic, getter=isShowingInspectorIndication) _Bool showingInspectorIndication;
@property(readonly, nonatomic) _Bool isAssistingNode;
- (struct OpaqueWKPage *)_pageRef;
@property(readonly, nonatomic) WKBrowsingContextController *browsingContextController;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
@property(readonly, nonatomic) struct WebPageProxy *page;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 context:(struct WebContext *)arg2 configuration:(struct WebPageConfiguration)arg3 webView:(id)arg4;
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;
- (_Bool)shouldIgnoreWebTouch;
- (void)fileUploadPanelDidDismiss:(id)arg1;
- (void)_showRunOpenPanel:(struct WebOpenPanelParameters *)arg1 resultListener:(struct WebOpenPanelResultListenerProxy *)arg2;
- (void)_showPlaybackTargetPicker:(_Bool)arg1 fromRect:(const struct IntRect *)arg2;
- (void)_updateChangedSelection;
- (void)selectWordForReplacement;
- (void)_selectionChanged;
- (void)_stopAssistingNode;
- (void)_startAssistingNode:(const struct AssistedNodeInformation *)arg1 userIsInteracting:(_Bool)arg2 userObject:(id)arg3;
@property(readonly, nonatomic) UIWebFormAccessory *formAccessoryView;
- (Vector_820e98fd *)assistedNodeSelectOptions;
@property(readonly, nonatomic) const struct AssistedNodeInformation *assistedNodeInformation;
- (void)_stopAssistingKeyboard;
- (void)_startAssistingKeyboard;
- (void)takeTraitsFrom:(id)arg1;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)hasSelection;
- (id)fontForCaretSelection;
- (id)textColorForCaretSelection;
- (void)selectAll;
- (_Bool)hasContent;
- (void)setMarkedText:(id)arg1;
- (id)wordRangeContainingCaretSelection;
- (id)wordContainingCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (void)moveForward:(unsigned int)arg1;
- (void)moveBackward:(unsigned int)arg1;
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (id)previousUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (id)metadataDictionariesForDictationResults;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
@property(nonatomic) long long selectionGranularity;
- (id)automaticallySelectedOverlay;
- (void)setBottomBufferHeight:(double)arg1;
- (_Bool)_interpretKeyEvent:(id)arg1 isCharEvent:(_Bool)arg2;
- (void)handleKeyWebEvent:(id)arg1;
- (_Bool)requiresKeyEvents;
- (struct CGRect)rectContainingCaretSelection;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;
- (id)selectedDOMRange;
- (struct _NSRange)_markedTextNSRange;
- (struct CGRect)rectForNSRange:(struct _NSRange)arg1;
- (struct _NSRange)selectionRange;
- (id)webSelectionAssistant;
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)textInputTraits;
- (_Bool)hasText;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (id)markedText;
- (_Bool)hasMarkedText;
@property(copy) UITextRange *selectedTextRange;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (void)_updateAccessory;
- (void)accessoryClear;
- (void)accessoryAutoFill;
- (void)accessoryTab:(_Bool)arg1;
- (void)accessoryDone;
- (void)requestAutocorrectionContextWithCompletionHandler:(id)arg1;
- (void)applyAutocorrection:(id)arg1 toString:(id)arg2 withCompletionHandler:(id)arg3;
- (void)requestDictationContext:(id)arg1;
- (void)replaceDictatedText:(id)arg1 withText:(id)arg2;
- (struct CGRect)textLastRect;
- (struct CGRect)textFirstRect;
- (unsigned int)_characterBeforeCaretSelection;
- (void)requestAutocorrectionRectsForString:(id)arg1 withCompletionHandler:(id)arg2;
@property(readonly, nonatomic) const struct WKAutoCorrectionData *autocorrectionData;
- (void)changeBlockSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 forHandle:(long long)arg3;
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3;
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;
- (void)_didUpdateBlockSelectionWithTouch:(int)arg1 withFlags:(int)arg2 growThreshold:(double)arg3 shrinkThreshold:(double)arg4;
- (void)_define:(id)arg1;
- (void)_showDictionary:(id)arg1;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)_performAction:(int)arg1;
- (void)_resetShowingTextStyle:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)replace:(id)arg1;
- (void)_reanalyze:(id)arg1;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)replaceText:(id)arg1 withText:(id)arg2;
- (_Bool)isReplaceAllowed;
- (id)selectedText;
- (void)_addShortcut:(id)arg1;
- (id)supportedPasteboardTypesForCurrentSelection;
- (id)inputAccessoryView;
- (_Bool)requiresAccessoryView;
- (void)_didEndScrollingOrZooming;
- (void)_willStartUserTriggeredScrollingOrZooming;
- (void)_willStartScrollingOrZooming;
- (void)_positionInformationDidChange:(const struct InteractionInformationAtPosition *)arg1;
- (void)clearSelection;
- (void)useSelectionAssistantWithMode:(int)arg1;
- (void)_attemptClickAtLocation:(struct CGPoint)arg1;
- (void)_twoFingerDoubleTapRecognized:(id)arg1;
- (void)_doubleTapRecognized:(id)arg1;
- (void)_singleTapCommited:(id)arg1;
- (void)_commitPotentialTapFailed;
- (void)_singleTapDidReset:(id)arg1;
- (void)_singleTapRecognized:(id)arg1;
- (void)_longPressRecognized:(id)arg1;
- (void)_highlightLongPressRecognized:(id)arg1;
- (id)webSelectionRects;
- (_Bool)pointIsInAssistedNode:(struct CGPoint)arg1;
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;
- (void)_finishInteraction;
- (void)_cancelInteraction;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_updatePositionInformation;
- (void)ensurePositionInformationIsUpToDate:(struct CGPoint)arg1;
- (SEL)_actionForLongPress;
- (void)_showDataDetectorsSheet;
- (void)_showLinkSheet;
- (void)_showImageSheet;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (id)inputView;
- (void)_displayFormNodeInputView;
- (_Bool)_requiresKeyboardResetOnReload;
- (_Bool)_requiresKeyboardWhenFirstResponder;
- (void)_didScroll;
- (void)_cancelLongPressGestureRecognizer;
- (void)_didGetTapHighlightForRequest:(unsigned long long)arg1 color:(const struct Color *)arg2 quads:(const Vector_59222031 *)arg3 topLeftRadius:(const struct IntSize *)arg4 topRightRadius:(const struct IntSize *)arg5 bottomLeftRadius:(const struct IntSize *)arg6 bottomRightRadius:(const struct IntSize *)arg7;
- (void)_showTapHighlightWithColor:(const struct Color *)arg1 quads:(const Vector_59222031 *)arg2 topLeftRadius:(const struct IntSize *)arg3 topRightRadius:(const struct IntSize *)arg4 bottomLeftRadius:(const struct IntSize *)arg5 bottomRightRadius:(const struct IntSize *)arg6;
- (void)_webTouchEvent:(const struct NativeWebTouchEvent *)arg1 preventsNativeGestures:(_Bool)arg2;
- (void)_webTouchEventsRecognized:(id)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)canBecomeFirstResponder;
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) struct CGPoint lastInteractionLocation;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) const struct InteractionInformationAtPosition *positionInformation;
- (void)cleanupInteraction;
- (void)setupInteraction;

// Remaining properties
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(nonatomic) _Bool deferBecomingResponder;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool forceEnableDictation;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;

@end

