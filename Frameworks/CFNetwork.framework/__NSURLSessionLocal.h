/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <CFNetwork/NSURLSession.h>

#import "NSURLSessionSubclass-Protocol.h"

@class NSArray, NSMutableDictionary, NSObject<OS_dispatch_queue>;

// Not exported
@interface __NSURLSessionLocal : NSURLSession <NSURLSessionSubclass>
{
    unsigned long long _identSeed;
    struct XTubeManager *_tubeManager;
    NSMutableDictionary *_tasks;
    NSObject<OS_dispatch_queue> *_invalidateQueue;
    id _invalidateCallback;
    const struct XURLCache *_xCache;
    long long _xCacheOnce;
    const struct XCookieStorage *_xCookies;
    long long _xCookiesOnce;
    const struct XCredentialStorage *_xCreds;
    long long _xCredsOnce;
    NSArray *_localProtocolClassesForDefaultSession;
}

- (void)_removeProtocolClassForDefaultSession:(Class)arg1;
- (_Bool)_prependProtocolClassForDefaultSession:(Class)arg1;
- (struct URLProtocol *)_newURLProtocolForTask:(id)arg1 client:(struct URLProtocolClient *)arg2;
- (_Bool)_cfurlRequest:(struct _CFURLRequest *)arg1 isCacheEquivalentTo:(struct _CFURLRequest *)arg2;
- (_Bool)_request:(id)arg1 isCacheEquivalentTo:(id)arg2;
- (id)_createCanonicalRequestForTask:(id)arg1;
- (id)_createCanonicalRequest:(id)arg1;
- (Class)_protocolClassForRequest:(id)arg1;
- (Class)_protocolClassForTask:(id)arg1;
- (id)_protocolClasses;
- (struct Tube *)_withConnectionCache_getPendingTubeForProtocol:(struct MetaConnectionCacheClient *)arg1 withKey:(const struct HTTPConnectionCacheKey *)arg2 scheduling:(const struct CoreSchedulingSet *)arg3;
- (_Bool)_withConnectionCache_enqueueRequest:(const struct HTTPRequestMessage *)arg1 forProtocol:(struct MetaConnectionCacheClient *)arg2 scheduling:(const struct CoreSchedulingSet *)arg3 options:(struct MetaConnectionOptions)arg4;
- (void)_withConnectionCache_setCurrentSSLMethod:(struct __CFString *)arg1 forKey:(const struct HTTPConnectionCacheKey *)arg2 scheduling:(const struct CoreSchedulingSet *)arg3;
- (struct __CFString *)_withConnectionCache_getCurrentSSLMethodForKey:(const struct HTTPConnectionCacheKey *)arg1 scheduling:(const struct CoreSchedulingSet *)arg2;
- (void)_getCookieHeadersForTask:(id)arg1 completionHandler:(id)arg2;
- (const struct XCookieStorage *)copyBaseStorageForRequest:(struct _CFURLRequest *)arg1;
- (id)_createTaskFromOriginalCFURLRequest:(struct _CFURLRequest *)arg1 updatedCFURLRequest:(struct _CFURLRequest *)arg2;
- (void)invalidateUnpurgeableConnectionsForConnectionCacheKey:(struct HTTPConnectionCacheKey *)arg1;
- (void)_purgeIdleConnections;
- (void)_invalidateAllConnections;
- (const struct XCredentialStorage *)_createXCredentialStorage;
- (const struct XCredentialStorage *)_createXCredentialStorage0;
- (const struct XCookieStorage *)_createXCookieStorage;
- (const struct XCookieStorage *)_createXCookieStorage0;
- (const struct XURLCache *)_createXURLCache;
- (const struct XURLCache *)_createXURLCache0;
- (struct _CFHSTSPolicy *)_copyHSTSPolicy;
- (void)_onqueue_completeInvalidation:(_Bool)arg1;
- (struct XTubeManager *)_actualTubeManager;
- (void)_onqueue_getTasksWithCompletionHandler:(id)arg1;
- (void)_onqueue_flushWithCompletionHandler:(id)arg1;
- (void)_onqueue_resetStorageWithCompletionHandler:(id)arg1;
- (void)task:(id)arg1 terminatedConnection:(id)arg2;
- (id)_streamTaskForHost:(id)arg1 port:(long long)arg2 tls:(_Bool)arg3 completionHandler:(id)arg4;
- (id)_AVAssetDownloadTaskForURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3;
- (id)downloadTaskForRequest:(id)arg1 downloadFilePath:(id)arg2 resumeData:(id)arg3 completion:(id)arg4;
- (id)uploadTaskForRequest:(id)arg1 uploadFile:(id)arg2 bodyData:(id)arg3 completion:(id)arg4;
- (id)dataTaskForRequest:(id)arg1 completion:(id)arg2;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
- (void)_flushOrResetStorage:(id)arg1 reset:(void)arg2;
- (void)_onqueue_invalidateSession:(_Bool)arg1 withQueue:(id)arg2 completion:(id)arg3;
- (void)_onqueue_checkForCompletion;
- (void)_onqueue_invokeInvalidateCallback;
- (id)taskForClass:(Class)arg1 request:(id)arg2 uploadFile:(id)arg3 bodyData:(id)arg4 completion:(id)arg5;
- (void)_onqueue_connectUploadTask:(id)arg1 strippedRequest:(id)arg2 bodyStream:(id)arg3 bodyParts:(id)arg4;
- (id)copyTasks;
- (void)replaceTask:(id)arg1 withTask:(id)arg2;
- (id)connToTask:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

