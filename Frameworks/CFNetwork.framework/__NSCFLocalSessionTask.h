/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <CFNetwork/NSURLSessionTask.h>

#import "NSURLSessionDataTaskSubclass-Protocol.h"
#import "NSURLSessionTaskSubclass-Protocol.h"
#import "NSURLSessionUploadTaskSubclass-Protocol.h"
#import "SessionConnectionDelegate-Protocol.h"

@class NSData, NSInputStream, NSObject<OS_dispatch_data>, NSObject<OS_dispatch_source>, NSString, NSURL, NSURLSessionConfiguration, __NSCFURLSessionConnection, __NSURLSessionLocal;

// Not exported
@interface __NSCFLocalSessionTask : NSURLSessionTask <NSURLSessionTaskSubclass, NSURLSessionDataTaskSubclass, NSURLSessionUploadTaskSubclass, SessionConnectionDelegate>
{
    _Bool _pendingResponseDisposition;
    _Bool _pendingResponseDisposition_didFinish;
    _Bool _duetAccountingIsDiscretionary;
    _Bool _didIssueDidFinish;
    __NSCFURLSessionConnection *_cfConn;
    NSURL *_uploadFile;
    NSData *_uploadData;
    NSInputStream *_uploadDataStream;
    NSObject<OS_dispatch_data> *_dataTaskData;
    id _dataTaskCompletion;
    NSObject<OS_dispatch_data> *_pendingResponseBytes;
    __NSURLSessionLocal *_localSession;
    unsigned long long _suspendCount;
    id _async_initialization;
    NSObject<OS_dispatch_source> *_resourceTimeout;
    NSString *_duetAccountedBundleID;
    struct HTTPConnectionCacheKey *_connKey;
    NSURLSessionConfiguration *__configuration;
}

@property(retain) NSURLSessionConfiguration *_configuration; // @synthesize _configuration=__configuration;
@property struct HTTPConnectionCacheKey *connKey; // @synthesize connKey=_connKey;
@property _Bool didIssueDidFinish; // @synthesize didIssueDidFinish=_didIssueDidFinish;
@property _Bool duetAccountingIsDiscretionary; // @synthesize duetAccountingIsDiscretionary=_duetAccountingIsDiscretionary;
@property(retain) NSString *duetAccountedBundleID; // @synthesize duetAccountedBundleID=_duetAccountedBundleID;
@property NSObject<OS_dispatch_source> *resourceTimeout; // @synthesize resourceTimeout=_resourceTimeout;
@property(copy) id async_initialization; // @synthesize async_initialization=_async_initialization;
@property unsigned long long suspendCount; // @synthesize suspendCount=_suspendCount;
@property(retain) __NSURLSessionLocal *localSession; // @synthesize localSession=_localSession;
@property NSObject<OS_dispatch_data> *pendingResponseBytes; // @synthesize pendingResponseBytes=_pendingResponseBytes;
@property _Bool pendingResponseDisposition_didFinish; // @synthesize pendingResponseDisposition_didFinish=_pendingResponseDisposition_didFinish;
@property _Bool pendingResponseDisposition; // @synthesize pendingResponseDisposition=_pendingResponseDisposition;
@property(copy) id dataTaskCompletion; // @synthesize dataTaskCompletion=_dataTaskCompletion;
@property NSObject<OS_dispatch_data> *dataTaskData; // @synthesize dataTaskData=_dataTaskData;
@property(retain) NSInputStream *uploadDataStream; // @synthesize uploadDataStream=_uploadDataStream;
@property(retain) NSData *uploadData; // @synthesize uploadData=_uploadData;
@property(retain) NSURL *uploadFile; // @synthesize uploadFile=_uploadFile;
@property(retain) __NSCFURLSessionConnection *cfConn; // @synthesize cfConn=_cfConn;
- (void)connection:(id)arg1 _conditionalRequirementsChanged:(_Bool)arg2;
- (void)connectionWaiting:(id)arg1;
- (void)connection:(id)arg1 _willSendRequestForEstablishedConnection:(id)arg2 completion:(id)arg3;
- (void)connection:(id)arg1 sentBodyBytes:(id)arg2 totalBytes:(id)arg3 expectedBytes:(id)arg4;
- (void)connection:(id)arg1 didReceiveData:(id)arg2 completion:(id)arg3;
- (void)connection:(id)arg1 challenged:(id)arg2 authCallback:(id)arg3;
- (void)connection:(id)arg1 request:(id)arg2 needsNewBodyStreamCallback:(id)arg3;
- (void)connection:(id)arg1 didReceiveConnectionCacheKey:(struct HTTPConnectionCacheKey *)arg2;
- (void)connection:(id)arg1 didFinishLoadingWithError:(id)arg2;
- (void)connection:(id)arg1 willCacheResponse:(id)arg2 responseCallback:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2 completion:(id)arg3;
- (void)connection:(id)arg1 wasRedirected:(id)arg2 newRequest:(id)arg3 responseCallback:(id)arg4;
- (void)startResourceTimer;
- (void)setConnection:(id)arg1;
- (id)timeoutError;
- (id)posixError:(int)arg1;
- (id)canceledError;
- (id)nsurlError:(int)arg1;
- (id)error:(id)arg1 code:(long long)arg2;
- (void)_onqueue_completeInitialization;
- (void)cancel_with_error:(id)arg1;
- (void)_onqueue_adjustPriority;
- (void)_onqueue_resume;
- (void)_onqueue_suspend;
- (void)_onqueue_cancel;
- (void)_onqueue_cancel_with_error:(id)arg1;
- (void)_onqueue_didSendBodyBytes:(long long)arg1 totalBytesSent:(long long)arg2 totalBytesExpectedToSend:(long long)arg3;
- (void)_onqueue_conditionalRequirementsChanged:(_Bool)arg1;
- (void)_onqueue_connectionWaiting;
- (void)_onqueue_willSendRequestForEstablishedConnection:(id)arg1 withCompletion:(id)arg2;
- (void)_onqueue_needNewBodyStream:(id)arg1 withCompletion:(id)arg2;
- (void)_task_onqueue_didReceiveDispatchData:(id)arg1 completionHandler:(id)arg2;
- (void)_onqueue_didReceiveDispatchData:(id)arg1 completion:(id)arg2;
- (void)_onqueue_didFinishWithError:(id)arg1;
- (void)_task_onqueue_didFinish;
- (void)_onqueue_willCacheResponse:(id)arg1 withCompletion:(id)arg2;
- (void)_onqueue_didReceiveChallenge:(id)arg1 request:(id)arg2 withCompletion:(id)arg3;
- (void)_onqueue_didReceiveResponse:(id)arg1 redirectRequest:(id)arg2 withCompletion:(id)arg3;
- (void)_private_onqueue_didReceiveResponse:(id)arg1;
- (void)_private_onqueue_didReceiveResponseDisposition:(long long)arg1;
- (void)_finishBecomeStream:(id)arg1;
- (void)_finishBecomeDownload:(id)arg1;
- (void)_finishAllow;
- (id)_onqueue_strippedMutableRequest;
- (id)description;
- (void)_onqueue_didReceiveResponse:(id)arg1 completion:(id)arg2;
- (void)dealloc;
- (id)initWithTask:(id)arg1;
- (id)initWithOriginalRequest:(id)arg1 updatedRequest:(id)arg2 ident:(unsigned long long)arg3 session:(id)arg4;

@end

