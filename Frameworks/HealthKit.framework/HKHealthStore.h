/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "HKClientInterface-Protocol.h"
#import "HKQueryDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSXPCConnection, _HKHealthStoreProxy;

@interface HKHealthStore : NSObject <HKClientInterface, HKQueryDelegate>
{
    NSXPCConnection *_connection;
    _HKHealthStoreProxy *_connectionProxy;
    NSObject<OS_dispatch_queue> *_clientQueue;
    NSObject<OS_dispatch_queue> *_queryQueue;
    NSMutableSet *_queries;
    NSMutableDictionary *_discoveries;
    NSMutableSet *_discoveriesEnded;
    NSMutableDictionary *_sessions;
    NSMutableSet *_sessionsEnded;
    id _authorizationDelegateTransactionErrorHandler;
    id _bluetoothStatusHandler;
}

+ (_Bool)isHealthDataAvailable;
@property(copy, nonatomic) id bluetoothStatusHandler; // @synthesize bluetoothStatusHandler=_bluetoothStatusHandler;
- (void).cxx_destruct;
- (void)deleteMedicalIDData;
- (void)updateMedicalIDData:(id)arg1;
- (void)fetchMedicalIDDataWithCompletion:(id)arg1;
- (id)_remoteObjectProxyWithActionCompletion:(id)arg1;
- (void)diagnosticsForKey:(id)arg1 completion:(id)arg2;
- (void)stopRecordingDataWithCompletion:(id)arg1;
- (void)startRecordingDataToFile:(id)arg1 completion:(id)arg2;
- (void)stopReplayingDataWithCompletion:(id)arg1;
- (void)startReplayingDataFromFile:(id)arg1 repeat:(_Bool)arg2 completion:(id)arg3;
- (void)stopFakingDataWithCompletion:(id)arg1;
- (void)startFakingDataWithActivity:(long long)arg1 speed:(id)arg2 completion:(id)arg3;
- (void)getDatabaseUsageInBytesWithCompletion:(id)arg1;
- (void)deliverSessionCharacteristics:(id)arg1 forService:(id)arg2 toClient:(unsigned long long)arg3 withError:(id)arg4;
- (void)deliverSessionTransitoryData:(id)arg1 toClient:(unsigned long long)arg2 withError:(id)arg3;
- (void)deliverSessionHealthServiceStatus:(long long)arg1 toClient:(unsigned long long)arg2 finished:(_Bool)arg3 withError:(id)arg4;
- (void)deliverDiscoveryHealthService:(id)arg1 toClient:(unsigned long long)arg2 finished:(_Bool)arg3 withError:(id)arg4;
- (void)deliverBluetoothStatus:(long long)arg1 withError:(id)arg2;
- (void)_addEndedSession:(id)arg1;
- (void)_addEndedDiscovery:(id)arg1;
- (void)performHealthServiceOperation:(id)arg1 onSession:(id)arg2 withParameters:(id)arg3 completion:(id)arg4;
- (void)getHealthServiceProperty:(id)arg1 forSession:(id)arg2 withHandler:(id)arg3;
- (void)removeHealthServicePairing:(id)arg1 withCompletion:(id)arg2;
- (void)addHealthServicePairing:(id)arg1 withCompletion:(id)arg2;
- (void)previousHealthServicePairingsWithHandler:(id)arg1;
- (id)activeHealthServiceSessions;
- (void)endHealthServiceSession:(id)arg1;
- (void)startHealthServiceSession:(id)arg1 withHandler:(id)arg2;
- (id)activeHealthServiceDiscoveries;
- (void)endHealthServiceDiscovery:(id)arg1;
- (void)_startHealthServiceExtendedDiscovery:(id)arg1 withHandler:(id)arg2;
- (void)startAllHealthServicesDiscoveryWithHandler:(id)arg1;
- (void)startHealthServiceDiscovery:(id)arg1 withHandler:(id)arg2;
- (void)endBluetoothStatusUpdates;
- (void)startBluetoothStatusUpdates:(id)arg1;
- (void)removeDefaultForKey:(id)arg1 withCompletion:(id)arg2;
- (void)getDefaultValueForKey:(id)arg1 withHandler:(id)arg2;
- (void)setDefaultValue:(id)arg1 forKey:(id)arg2 completion:(id)arg3;
- (void)dealloc;
- (void)_handleInterruption;
- (id)_serverProxyForSelector:(SEL)arg1 sanitizedErrorHandler:(id)arg2;
- (void)closeTransactionWithType:(id)arg1 anchor:(id)arg2 ackTime:(id)arg3;
- (void)disableAllBackgroundDeliveryWithCompletion:(id)arg1;
- (void)disableBackgroundDeliveryForType:(id)arg1 withCompletion:(id)arg2;
- (void)enableBackgroundDeliveryForType:(id)arg1 frequency:(long long)arg2 withCompletion:(id)arg3;
- (void)_setBackgroundDeliveryFrequencyDataType:(id)arg1 frequency:(long long)arg2 withCompletion:(id)arg3;
- (void)queryDidFinishExecuting:(id)arg1;
- (_Bool)_setCharacteristic:(id)arg1 forDataType:(id)arg2 error:(id *)arg3;
- (void)_fetchCharacteristicForDataTypeSynchronous:(id)arg1 withCompletion:(id)arg2;
- (_Bool)_setBloodType:(long long)arg1 error:(id *)arg2;
- (id)bloodTypeWithError:(id *)arg1;
- (_Bool)_setBiologicalSex:(long long)arg1 error:(id *)arg2;
- (id)biologicalSexWithError:(id *)arg1;
- (_Bool)_setDateOfBirth:(id)arg1 error:(id *)arg2;
- (id)dateOfBirthWithError:(id *)arg1;
- (void)stopQuery:(id)arg1;
- (void)executeQuery:(id)arg1;
- (void)deleteObject:(id)arg1 withCompletion:(id)arg2;
- (void)saveObjects:(id)arg1 withCompletion:(id)arg2;
- (void)saveObject:(id)arg1 withCompletion:(id)arg2;
- (void)_clientQueue_invokeAuthorizationDelegateTransactionErrorHandlerWithError:(id)arg1;
- (void)endAuthorizationDelegateTransaction;
- (void)beginAuthorizationDelegateTransactionWithSourceHandler:(id)arg1 errorHandler:(void)arg2;
- (void)resetAuthorizationStatusForBundleIdentifier:(id)arg1 completion:(id)arg2;
- (void)setRequestedAuthorizationForBundleIdentifier:(id)arg1 shareTypes:(id)arg2 readTypes:(id)arg3 completion:(id)arg4;
- (void)setAuthorizationStatuses:(id)arg1 forBundleIdentifier:(id)arg2 completion:(id)arg3;
- (void)allAuthorizationRecordsForType:(id)arg1 completion:(id)arg2;
- (void)allAuthorizationRecordsForBundleIdentifier:(id)arg1 completion:(id)arg2;
- (void)_throwIfAuthorizationDisallowedForSharing:(_Bool)arg1 types:(id)arg2;
- (void)requestAuthorizationToShareTypes:(id)arg1 readTypes:(id)arg2 completion:(id)arg3;
- (long long)authorizationStatusForType:(id)arg1;
- (void)deleteAllSamplesWithTypes:(id)arg1 sourceBundleIdentifier:(id)arg2 completion:(id)arg3;
- (void)setOrderedSources:(id)arg1 forObjectType:(id)arg2 completion:(id)arg3;
- (void)orderedSourcesForObjectType:(id)arg1 completion:(id)arg2;
- (void)allSourcesWithCompletion:(id)arg1;
- (id)initWithListenerEndpoint:(id)arg1;
- (id)init;

@end

