/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSOperation.h"

@class CKContainer, CKOperationInfo, CKPlaceholderOperation, NSArray, NSError, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString;

@interface CKOperation : NSOperation
{
    _Bool _allowsCellularAccess;
    _Bool _isExecuting;
    _Bool _isFinished;
    _Bool _isDiscretionary;
    CKContainer *_container;
    CKPlaceholderOperation *_placeholderOperation;
    NSString *_operationID;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSString *_sectionID;
    NSString *_parentSectionID;
    id _context;
    NSArray *_requestUUIDs;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSObject<OS_dispatch_source> *_timeoutSource;
    long long _usesBackgroundSessionOverride;
}

@property(nonatomic) long long usesBackgroundSessionOverride; // @synthesize usesBackgroundSessionOverride=_usesBackgroundSessionOverride;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timeoutSource; // @synthesize timeoutSource=_timeoutSource;
@property(retain, nonatomic) NSString *sourceApplicationSecondaryIdentifier; // @synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier;
@property(retain, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(retain, nonatomic) NSArray *requestUUIDs; // @synthesize requestUUIDs=_requestUUIDs;
@property(nonatomic) _Bool isDiscretionary; // @synthesize isDiscretionary=_isDiscretionary;
@property(readonly, nonatomic) id context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *parentSectionID; // @synthesize parentSectionID=_parentSectionID;
@property(retain, nonatomic) NSString *sectionID; // @synthesize sectionID=_sectionID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
@property(nonatomic) _Bool isExecuting; // @synthesize isExecuting=_isExecuting;
@property(retain, nonatomic) NSString *operationID; // @synthesize operationID=_operationID;
@property(retain, nonatomic) CKPlaceholderOperation *placeholderOperation; // @synthesize placeholderOperation=_placeholderOperation;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(retain, nonatomic) CKContainer *container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)finishWithError:(id)arg1;
- (void)_handleCompletionCallback:(id)arg1;
- (void)_handleProgressCallback:(id)arg1;
@property(nonatomic) _Bool usesBackgroundSession;
- (id)daemon;
- (id)description;
- (id)CKPropertiesDescription;
- (id)_requestUUIDsString;
- (void)processOperationResult:(id)arg1;
- (void)_installTimeoutSource;
- (void)_uninstallTimeoutSource;
- (void)cancel;
@property(readonly, nonatomic) CKOperationInfo *operationInfo;
- (Class)operationInfoClass;
- (void)fillOutOperationInfo:(id)arg1;
- (_Bool)isConcurrent;
- (void)main;
- (_Bool)CKOperationShouldRun:(id *)arg1;
- (void)performCKOperation;
- (void)start;
- (void)dealloc;
- (id)init;

@end

