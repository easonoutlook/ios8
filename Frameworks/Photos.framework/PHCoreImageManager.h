/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

@class NSMapTable, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSRecursiveLock;

@interface PHCoreImageManager : NSObject
{
    int _CPLDownloadUpdateNotifyToken;
    NSObject<OS_dispatch_queue> *_requestLookupTableIsolationQueue;
    NSMapTable *_requestLookupTable;
    NSRecursiveLock *_preheatLock;
    NSMutableDictionary *_preheatItemSources;
    NSMutableDictionary *_preheatItemMapTables;
    NSMapTable *_perDomainPreheatItemMapTables;
    NSMapTable *_perDomainHighPriorityRequestWaitGroups;
    NSObject<OS_dispatch_queue> *_CPLDownloadUpdateIsolationQueue;
    NSObject<OS_dispatch_queue> *_CPLDownloadFireAndForgetRequestQueue;
}

+ (int)_degradedFormatWithSize:(struct CGSize)arg1 contentMode:(long long)arg2 options:(id)arg3 aspectRatio:(double)arg4 hasAdjustmentsHandler:(id)arg5 isTableFormat:(void)arg6;
+ (int)_bestFormatWithSize:(struct CGSize)arg1 contentMode:(long long)arg2 options:(id)arg3 aspectRatio:(double)arg4 hasAdjustmentsHandler:(id)arg5 isTableFormat:(void)arg6 desiredImagePixelSize:(_Bool *)arg7;
+ (_Bool)_formatIsLessThanFullscreen:(int)arg1;
+ (int)_fallbackLargestFormatForRequestVersion:(long long)arg1;
+ (struct CGSize)_sizeWithDimension:(double)arg1 aspectRatio:(double)arg2 preserveAspectRatio:(_Bool)arg3;
+ (struct CGImage *)_newResizedImageForImage:(struct CGImage *)arg1 withSize:(struct CGSize)arg2 normalizedCropRect:(struct CGRect)arg3 contentMode:(long long)arg4;
+ (struct CGSize)_aspectedSizeWithSize:(struct CGSize)arg1 maxDimension:(double)arg2;
+ (id)_debugFilenameForAsset:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *CPLDownloadFireAndForgetRequestQueue; // @synthesize CPLDownloadFireAndForgetRequestQueue=_CPLDownloadFireAndForgetRequestQueue;
@property(nonatomic) int CPLDownloadUpdateNotifyToken; // @synthesize CPLDownloadUpdateNotifyToken=_CPLDownloadUpdateNotifyToken;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *CPLDownloadUpdateIsolationQueue; // @synthesize CPLDownloadUpdateIsolationQueue=_CPLDownloadUpdateIsolationQueue;
@property(retain, nonatomic) NSMapTable *perDomainHighPriorityRequestWaitGroups; // @synthesize perDomainHighPriorityRequestWaitGroups=_perDomainHighPriorityRequestWaitGroups;
@property(retain, nonatomic) NSMapTable *perDomainPreheatItemMapTables; // @synthesize perDomainPreheatItemMapTables=_perDomainPreheatItemMapTables;
@property(retain, nonatomic) NSMutableDictionary *preheatItemMapTables; // @synthesize preheatItemMapTables=_preheatItemMapTables;
@property(retain, nonatomic) NSMutableDictionary *preheatItemSources; // @synthesize preheatItemSources=_preheatItemSources;
@property(retain, nonatomic) NSRecursiveLock *preheatLock; // @synthesize preheatLock=_preheatLock;
@property(retain, nonatomic) NSMapTable *requestLookupTable; // @synthesize requestLookupTable=_requestLookupTable;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *requestLookupTableIsolationQueue; // @synthesize requestLookupTableIsolationQueue=_requestLookupTableIsolationQueue;
- (void).cxx_destruct;
- (void)_cancelAsynchronousRequestWithID:(unsigned long long)arg1;
- (void)_processImageRequest:(id)arg1 sync:(_Bool)arg2;
- (void)_fetchAdjustmentDataThruAssetsdAndCPLHandlerWithRequest:(id)arg1 networkAccessAllowed:(_Bool)arg2 trackCPLDownload:(_Bool)arg3 completionHandler:(id)arg4;
- (void)_unregisterRequest:(id)arg1;
- (void)_registerRequest:(id)arg1;
- (void)_updateCPLDownloadStatesUponNotification;
- (void)_cancelAndFlushPreheatItemsForAssets:(id)arg1 domain:(id)arg2 passingTestHandler:(id)arg3;
- (_Bool)_cancelAndFlushPreheatWithAsset:(id)arg1 preheatItem:(id)arg2 domain:(id)arg3;
- (id)_preheatItemCreateIfNeededWithAsset:(id)arg1 format:(int)arg2 optimalSourcePixelSize:(struct CGSize)arg3 options:(unsigned int)arg4 outDidExist:(_Bool *)arg5 domain:(id)arg6;
- (id)_preheatItemWithAsset:(id)arg1 format:(int)arg2 domain:(id)arg3;
- (id)_preheatItemMapTableWithFormat:(int)arg1 domain:(id)arg2 createIfNeeded:(_Bool)arg3;
- (id)_preheatItemSourceWithFormat:(int)arg1;
- (id)_highPriorityRequestWaitGroupWithDomain:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

